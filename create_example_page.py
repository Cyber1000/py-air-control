import os
import json
import pprint
from pyairctrl.base_client import AirClientBase


def test_data():
    dir_path = os.path.dirname(os.path.realpath(__file__))
    with open(os.path.join(dir_path, "testing/data.json"), "r") as json_file:
        with open(
            os.path.join(dir_path, "{}.md".format("Examples")), mode="w"
        ) as md_file:
            md_file.write(
                "*This file was auto-generated by create_example_page.py, do not edit this file manually*\n\n"
            )
            data = json.load(json_file)
            for client_type in data:
                create_header(md_file, client_type)
                create_data(md_file, data[client_type])
                md_file.write("---\n\n")


def create_header(md_file, client_type):
    md_file.write("# {}\n".format(client_type))


def create_data(md_file, client_data):
    for single_set in client_data:
        create_single_set(md_file, client_data[single_set])


def create_single_set(md_file, single_set):
    md_file.write(
        "## {} (Device: {})\n".format(single_set["info"], single_set["device"])
    )
    md_file.write("Execution:\n")
    for execute in single_set["execute"]:
        md_file.write("- {}\n".format(execute))

    md_file.write("\nOutput:\n\n")
    md_file.write("```\n")

    if "output" in single_set:
        data = single_set["output"]
        hasOutput=True
    else: 
        data = single_set["input"]
        hasOutput=False

    try:
        data=json.loads(data)
        isJson=True
    except ValueError:
        isJson=False

    if not hasOutput and isJson:
        data = AirClientBase._dump_keys(data, None)

    if isJson:
        data=json.dumps(data, indent=4)

    md_file.write("{}\n".format(data))
    md_file.write("```\n")


test_data()
